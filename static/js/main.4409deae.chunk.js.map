{"version":3,"sources":["todo/components/TodoInput.tsx","todo/components/TodoList.tsx","http/axios.ts","todo/index.tsx","hooks/index.tsx","http/api.ts","index.tsx"],"names":["TodoInputStyle","styled","div","memo","props","inputVal","changeInputVal","addTask","value","onChange","type","onClick","TodoItemStyle","TodoList","todoList","deleteTask","bordered","dataSource","renderItem","todo","index","Item","actions","size","task","defaultProps","originAxios","create","interceptors","response","use","res","data","err","console","log","TodoStyle","TodoTitleStyle","h1","LoadingStyle","Todo","useState","setInputVal","setTodoList","setData","loading","setLoading","error","setError","useEffect","a","async","axios","get","result","fetchData","useFetchData","title","useCallback","alert","newTodoList","splice","useMemo","e","currentTarget","status","ReactDOM","render","document","getElementById"],"mappings":"kYAIA,IAAMA,EAAiBC,IAAOC,IAAV,KAuBLC,kBAbG,SAACC,GAA2B,IACpCC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,eAAgBC,EAAYH,EAAZG,QAElC,OACE,kBAACP,EAAD,KACE,uBAAOQ,MAAOH,EAAUI,SAAUH,IAClC,uBAAQI,KAAK,UAAUC,QAASJ,GAAhC,gB,8GChBN,IAAMK,EAAgBX,IAAOC,IAAV,KAabW,EAAW,SAACT,GAA0B,IAClCU,EAAyBV,EAAzBU,SAAUC,EAAeX,EAAfW,WAElB,OACE,kBAACH,EAAD,KACE,uBACEI,UAAQ,EACRC,WAAYH,EACZI,WAAY,SAACC,EAAMC,GAAP,OACV,sBAAMC,KAAN,CACEC,QAAS,CACP,uBACEZ,KAAK,SACLa,KAAK,QACLZ,QAAS,kBAAMI,EAAWK,KAH5B,YASDD,EAAKK,WAQlBX,EAASY,aAAe,CACtBX,SAAU,IAGGX,qBAAKU,G,kCC/CNa,IAAYC,SAEpBC,aAAaC,SAASC,KAC1B,SAAAC,GAAG,OAAIA,EAAIC,QACX,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAK,+BAGXP,QAAf,E,kYCDA,IAAMU,EAAYnC,IAAOC,IAAV,KAOTmC,EAAiBpC,IAAOqC,GAAV,KAKdC,EAAetC,IAAOC,IAAV,KASZsC,EAAO,SAACpC,GAAsB,IAAD,EACDqC,mBAAS,IADR,mBAC1BpC,EAD0B,KAChBqC,EADgB,OAEDD,mBAAsB,IAFrB,mBAE1B3B,EAF0B,KAEhB6B,EAFgB,OCzBd,WAAO,IAAD,EACDF,mBAAiB,IADhB,mBAClBT,EADkB,KACZY,EADY,OAEKH,oBAAS,GAFd,mBAElBI,EAFkB,KAETC,EAFS,OAGCL,oBAAS,GAHV,mBAGlBM,EAHkB,KAGXC,EAHW,KAqBzB,OAhBAC,qBAAU,YACU,mBAAAC,EAAAC,OAAA,uDAChBH,GAAS,GACTF,GAAW,GAFK,oBAAAI,EAAA,MCPbE,EAAMC,IACX,8EDMkB,OAIRC,EAJQ,OAKdV,EAAQU,EAAOtB,KAAKA,MALN,gDAOdgB,GAAS,GAPK,QAShBF,GAAW,GATK,wDAYlBS,KACC,IAEI,CAAEvB,OAAMa,UAASE,SDOSS,GAAzBxB,EAHyB,EAGzBA,KAAMa,EAHmB,EAGnBA,QAASE,EAHU,EAGVA,MAEvBE,qBAAU,WACRN,EAAYX,KACX,CAACA,IAP6B,IASzByB,EAAUrD,EAAVqD,MAMFlD,EAAUmD,uBAAY,WACrBrD,GAILsC,EAAY,GAAD,mBAAK7B,GAAL,CAAe,CAAEU,KAAMnB,MAClCqC,EAAY,KAJViB,MAAM,oCAKP,CAAC7C,EAAUT,IAERU,EAAa2C,uBACjB,SAACtC,GACC,IAAMwC,EAAW,YAAO9C,GACxB8C,EAAYC,OAAOzC,EAAO,GAC1BuB,EAAYiB,KAEd,CAAC9C,IAmBH,OACE,kBAACsB,EAAD,KACG0B,mBACC,kBACE,kBAACzB,EAAD,KAAiBoB,KAEnB,CAACA,IAEH,kBAAC,EAAD,CACEpD,SAAUA,EACVC,eAhDiB,SAACyD,GACtBrB,EAAYqB,EAAEC,cAAcxD,QAgDxBD,QAASA,IA1BTsC,EAEA,kBAACN,EAAD,KACE,6BAKFQ,EACK,uBAAQkB,OAAO,QAAQR,MAAM,yCAG/B,kBAAC,EAAD,CAAU3C,SAAUA,EAAUC,WAAYA,MAqBrDyB,EAAKf,aAAe,CAClBgC,MAAO,SAGMtD,qBAAKqC,GGhGpB0B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.4409deae.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Input, Button } from \"antd\";\n\nconst TodoInputStyle = styled.div`\n  display: flex;\n`;\n\ninterface TodoInputProps {\n  inputVal: string;\n  changeInputVal: (e: React.FormEvent<HTMLInputElement>) => void;\n  addTask: () => void;\n}\n\nconst TodoInput = (props: TodoInputProps) => {\n  const { inputVal, changeInputVal, addTask } = props;\n\n  return (\n    <TodoInputStyle>\n      <Input value={inputVal} onChange={changeInputVal} />\n      <Button type=\"primary\" onClick={addTask}>\n        Add Task\n      </Button>\n    </TodoInputStyle>\n  );\n};\n\nexport default memo(TodoInput);\n","import React, {memo} from \"react\";\nimport styled from \"styled-components\";\nimport { List, Button } from \"antd\";\n\nconst TodoItemStyle = styled.div`\n  padding-top: 10px;\n`;\n\nexport interface Todo {\n  task: string;\n}\n\ninterface TodoListProps {\n  todoList: Todo[];\n  deleteTask: (inedx: number) => void;\n}\n\nconst TodoList = (props: TodoListProps) => {\n  const { todoList, deleteTask } = props;\n\n  return (\n    <TodoItemStyle>\n      <List\n        bordered\n        dataSource={todoList}\n        renderItem={(todo, index) => (\n          <List.Item\n            actions={[\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                onClick={() => deleteTask(index)}\n              >\n                delete\n              </Button>\n            ]}\n          >\n            {todo.task}\n          </List.Item>\n        )}\n      />\n    </TodoItemStyle>\n  );\n};\n\nTodoList.defaultProps = {\n  todoList: []\n};\n\nexport default memo(TodoList);\n","import originAxios from \"axios\";\n\nconst axios = originAxios.create();\n\naxios.interceptors.response.use(\n  res => res.data,\n  err => console.log(err, \"网络错误\")\n);\n\nexport default originAxios;\n","import React, { useState, useCallback, memo, useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport { Todo as TodoModel } from \"./components/TodoList\";\nimport { useFetchData } from \"../hooks\";\nimport { Spin, Result } from \"antd\";\n\nconst TodoStyle = styled.div`\n  width: 80%;\n  min-width: 200px;\n  max-width: 500px;\n  margin: 100px auto 0;\n`;\n\nconst TodoTitleStyle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nconst LoadingStyle = styled.div`\n  padding-top: 20px;\n  text-align: center;\n`;\n\ninterface TodoProps {\n  title: string;\n}\n\nconst Todo = (props: TodoProps) => {\n  const [inputVal, setInputVal] = useState(\"\");\n  const [todoList, setTodoList] = useState<TodoModel[]>([]);\n  const { data, loading, error } = useFetchData();\n\n  useEffect(() => {\n    setTodoList(data);\n  }, [data]);\n\n  const { title } = props;\n\n  const changeInputVal = (e: React.FormEvent<HTMLInputElement>) => {\n    setInputVal(e.currentTarget.value);\n  };\n\n  const addTask = useCallback(() => {\n    if (!inputVal) {\n      alert(\"请输入任务\");\n      return;\n    }\n    setTodoList([...todoList, { task: inputVal }]);\n    setInputVal(\"\");\n  }, [todoList, inputVal]);\n\n  const deleteTask = useCallback(\n    (index: number) => {\n      const newTodoList = [...todoList];\n      newTodoList.splice(index, 1);\n      setTodoList(newTodoList);\n    },\n    [todoList]\n  );\n\n  const renderTodoList = () => {\n    if (loading) {\n      return (\n        <LoadingStyle>\n          <Spin />\n        </LoadingStyle>\n      );\n    }\n\n    if (error) {\n      return <Result status=\"error\" title=\"数据加载错误\" />;\n    }\n\n    return <TodoList todoList={todoList} deleteTask={deleteTask} />;\n  };\n\n  return (\n    <TodoStyle>\n      {useMemo(\n        () => (\n          <TodoTitleStyle>{title}</TodoTitleStyle>\n        ),\n        [title]\n      )}\n      <TodoInput\n        inputVal={inputVal}\n        changeInputVal={changeInputVal}\n        addTask={addTask}\n      />\n      {renderTodoList()}\n    </TodoStyle>\n  );\n};\n\nTodo.defaultProps = {\n  title: \"Todos\"\n};\n\nexport default memo(Todo);\n","import { useState, useEffect } from \"react\";\nimport { getTodoListRequest } from \"../http/api\";\nimport { Todo } from '../todo/components/TodoList';\n\nconst useFetchData = () => {\n  const [data, setData] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(false);\n      setLoading(true);\n      try {\n        const result = await getTodoListRequest();\n        setData(result.data.data);\n      } catch (err) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  return { data, loading, error };\n};\n\nexport { useFetchData };\n","import axios from \"./axios\";\n\nexport const getTodoListRequest = () => {\n  return axios.get(\n    \"https://www.fastmock.site/mock/630768a82b1e71435d970c4620fee4aa/todo/todo\"\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Todo from \"./todo\";\n\nReactDOM.render(<Todo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}